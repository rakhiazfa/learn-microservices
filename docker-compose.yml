version: '3.8'

services:

  mysql:
    container_name: mysql
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: p@ssw0rd
    volumes:
      - mysql-volume:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - merdekalio-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: p@ssw0rd
    ports:
      - 13306:80
    networks:
      - merdekalio-network
    depends_on:
      - mysql

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: administrator
      RABBITMQ_DEFAULT_PASS: p@ssw0rd
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    hostname: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - merdekalio-network

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --requirepass p@ssw0rd --bind 0.0.0.0
    restart: always
    volumes:
      - redis-volume:/data
    ports:
      - 6379:6379
    networks:
      - merdekalio-network

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=p@ssw0rd
      - HTTP_USER=administrator
      - HTTP_PASSWORD=p@ssw0rd
    ports:
      - 16379:8081
    networks:
      - merdekalio-network
    depends_on:
      - redis

  identity-service:
    container_name: identity-service
    build:
      context: ./identity-service
      dockerfile: Dockerfile
    env_file:
      - ./identity-service/.env.production
    networks:
      - merdekalio-network
    depends_on:
      - mysql
      - rabbitmq
      - redis

  master-data-service:
    container_name: master-data-service
    build:
      context: ./master-data-service
      dockerfile: Dockerfile
    env_file:
      - ./master-data-service/.env.production
    networks:
      - merdekalio-network
    depends_on:
      - mysql
      - rabbitmq
      - redis

  api-gateway:
    container_name: api-gateway
    image: nginx:latest
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./api-gateway/snippets:/etc/nginx/snippets
    ports:
      - 8080:80
    networks:
      - merdekalio-network
    depends_on:
    - identity-service

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env.production
    ports:
      - 3000:80
    networks:
      - merdekalio-network
    depends_on:
      - api-gateway

volumes:
  mysql-volume:
    driver: local
  rabbitmq-volume:
    driver: local
  redis-volume:
    driver: local

networks:
  merdekalio-network:
    driver: bridge